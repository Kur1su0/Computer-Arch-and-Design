--
-- VHDL Test Bench CAD_lib.lab8_writeback_tb.lab8_writeback_tester
--
-- Created:
--          by - W.UNKNOWN (DESKTOP-86TQKQ1)
--          at - 21:18:34 04/ 4/2021
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2018.2 (Build 19)
--
LIBRARY CAD_lib;
USE CAD_lib.RV32I.ALL;
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.numeric_std.all;
USE work.RV32I.ALL;
USE std.textio.all;

ENTITY lab8_writeback_tb IS
END lab8_writeback_tb;


LIBRARY CAD_lib;
USE CAD_lib.ALL;


ARCHITECTURE rtl OF lab8_writeback_tb IS

   -- Architecture declarations
FILE test_vectors : text OPEN read_mode IS "lab8_wback_vec.txt";
   -- Internal signal declarations
   SIGNAL Data    					: std_ulogic_vector(31 DOWNTO 0);
   SIGNAL Rd_in   					: std_ulogic_vector(4 DOWNTO 0);
   SIGNAL FunC     					: RV32I_Op;
   SIGNAL clk      					: std_ulogic;
   SIGNAL Rd_out,Rd_out_valid   	: std_ulogic_vector(4 DOWNTO 0);
   SIGNAL Data_out,Data_out_valid 	: std_ulogic_vector(31 DOWNTO 0);
   SIGNAL w,w_valid        			: std_ulogic;

   SIGNAL vecno : NATURAL := 0;

   -- Component declarations
   COMPONENT lab8_writeback
      PORT (
         Data     : IN     std_ulogic_vector(31 DOWNTO 0);
         Rd_in    : IN     std_ulogic_vector(4 DOWNTO 0);
         FunC     : IN     RV32I_Op;
         clk      : IN     std_ulogic;
         Rd_out   : OUT    std_ulogic_vector(4 DOWNTO 0);
         Data_out : OUT    std_ulogic_vector(31 DOWNTO 0);
         w        : OUT    std_ulogic
      );
   END COMPONENT;

   -- embedded configurations
   -- pragma synthesis_off
   FOR U_0 : lab8_writeback USE ENTITY CAD_lib.lab8_writeback;
   -- pragma synthesis_on

BEGIN

         U_0 : lab8_writeback
            PORT MAP (
               Data     => Data,
               Rd_in    => Rd_in,
               FunC     => FunC,
               clk      => clk,
               Rd_out   => Rd_out,
               Data_out => Data_out,
               w        => w
            );






stimu : process
	VARIABLE L : LINE;
	VARIABLE v_Data,v_Data_out_valid	:std_ulogic_vector(31 DOWNTO 0);
	VARIABLE v_Rd_in,v_Rd_out_valid 	:std_ulogic_vector(4 DOWNTO 0);
	VARIABLE v_FunC  					: Func_Name;
	VARIABLE v_w_valid 					:std_ulogic;
	VARIABLE space:string(1 DOWNTO 1);	 
		 
begin
	readline(test_vectors,L);
	WHILE NOT endfile(test_vectors) LOOP
  
		readline(test_vectors,L); 
		hread(L,v_Data); 			Data<=v_Data;
		read(L,v_Rd_in); 			Rd_in<=v_Rd_in;
		read(L,space); 
		read(L,v_FunC);				FunC<=Ftype(v_FunC);
		
		clk<='0'; wait for 100ns;
		
		read(L,v_Rd_out_valid); 	 Rd_out_valid<=v_Rd_out_valid;
		hread(L,v_Data_out_valid);	 Data_out_valid<=v_Data_out_valid;
		read(L,v_w_valid);			 w_valid<=v_w_valid;
		
		
		clk<='1'; wait for 100ns;
		
		
	End Loop;
	report "END of TB";
	wait;
end process;



check: process(clk)
begin
  if falling_edge(clk) then
        vecno <= vecno + 1;
        
        
        ASSERT Rd_out=Rd_out_valid
        REPORT "ERROR: Rd_out " & to_string(vecno)
        SEVERITY WARNING; 
        
        ASSERT Data_out=Data_out_valid
        REPORT "ERROR: Data_out " & to_string(vecno)
        SEVERITY WARNING;
        
        ASSERT w=w_valid
        REPORT "ERROR: w " & to_string(vecno)
        SEVERITY WARNING;
       
        
        
  end if;
end process;


-- process
-- begin
  -- Data  <=x"00000003";             
  -- Rd_in  <="00010";          
  -- FunC <=LB;  
  -- clk <= '0'; wait for 100ns;
  -- clk <= '1'; wait for 100ns;
  
  -- FunC <=NOP;  
  -- clk <= '0'; wait for 100ns;
  -- clk <= '1'; wait for 100ns;
  
  -- FunC <=ADDI;  
  -- clk <= '0'; wait for 100ns;
  -- clk <= '1'; wait for 100ns;
  -- wait;
  -- end process;
END rtl;